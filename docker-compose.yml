version: "3.4"

services:
  mongo:
    image: mongo:3.7
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ../data/mongodb:/data/db
    mem_limit: "4G"

  boilerplate:
    image: node:14
    container_name: boilerplate
    command: >
      bash -c "cd /app && yarn && yarn start:debug"
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - kafka
      - zookeeper
    volumes:
      - ./:/app/

  zookeeper:
    image: wurstmeister/zookeeper:latest
    restart: unless-stopped
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - ../data/zookeeper/data:/data
      - ../data/zookeeper/datalog:/datalog

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: import:1:1, jobdata:1:1, test:1:1
    volumes:
      - ../data/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper